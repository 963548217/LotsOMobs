// Date: 21.09.2014 16:07:06
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelAmmonite extends ModelBase
{
  //fields
    ModelRenderer Shape2;
    ModelRenderer BigShell;
    ModelRenderer Head;
    ModelRenderer LittleShell;
    ModelRenderer Leg8;
    ModelRenderer Leg6;
    ModelRenderer Leg4;
    ModelRenderer Leg7;
    ModelRenderer Leg5;
    ModelRenderer Leg3;
    ModelRenderer Leg1;
    ModelRenderer Leg2;
    ModelRenderer Shape1;
  
  public ModelAmmonite()
  {
    textureWidth = 64;
    textureHeight = 128;
    
      Shape2 = new ModelRenderer(this, 0, 5);
      Shape2.addBox(0F, 0F, -14F, 3, 2, 15);
      Shape2.setRotationPoint(-1.533333F, 20F, -3F);
      Shape2.setTextureSize(64, 128);
      Shape2.mirror = true;
      setRotation(Shape2, 0.3141593F, 0F, 0F);
      BigShell = new ModelRenderer(this, 0, 100);
      BigShell.addBox(-4F, -4F, 1F, 8, 13, 12);
      BigShell.setRotationPoint(0F, 10F, 7F);
      BigShell.setTextureSize(64, 128);
      BigShell.mirror = true;
      setRotation(BigShell, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 60);
      Head.addBox(-3F, -3F, -3F, 6, 6, 6);
      Head.setRotationPoint(0F, 18F, 0F);
      Head.setTextureSize(64, 128);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      LittleShell = new ModelRenderer(this, 0, 75);
      LittleShell.addBox(-5F, -4F, -6F, 10, 8, 12);
      LittleShell.setRotationPoint(0F, 18F, 9F);
      LittleShell.setTextureSize(64, 128);
      LittleShell.mirror = true;
      setRotation(LittleShell, 0F, 0F, 0F);
      Leg8 = new ModelRenderer(this, 18, 0);
      Leg8.addBox(-1F, -1F, -1F, 16, 2, 2);
      Leg8.setRotationPoint(2F, 17.5F, -3F);
      Leg8.setTextureSize(64, 128);
      Leg8.mirror = true;
      setRotation(Leg8, 0F, 1.22173F, 0F);
      Leg6 = new ModelRenderer(this, 18, 0);
      Leg6.addBox(-1F, -1F, -1F, 16, 2, 2);
      Leg6.setRotationPoint(2F, 16F, -3F);
      Leg6.setTextureSize(64, 128);
      Leg6.mirror = true;
      setRotation(Leg6, -0.0743572F, 1.184552F, -0.1919862F);
      Leg4 = new ModelRenderer(this, 18, 0);
      Leg4.addBox(-1F, -1F, -1F, 16, 2, 2);
      Leg4.setRotationPoint(2F, 19F, -3F);
      Leg4.setTextureSize(64, 128);
      Leg4.mirror = true;
      setRotation(Leg4, 0F, 1.22173F, 0.1919862F);
      Leg7 = new ModelRenderer(this, 18, 0);
      Leg7.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg7.setRotationPoint(-2F, 19F, -3F);
      Leg7.setTextureSize(64, 128);
      Leg7.mirror = true;
      setRotation(Leg7, 0F, -1.22173F, -0.1919862F);
      Leg5 = new ModelRenderer(this, 18, 0);
      Leg5.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg5.setRotationPoint(-2F, 16F, -3F);
      Leg5.setTextureSize(64, 128);
      Leg5.mirror = true;
      setRotation(Leg5, 0F, -1.22173F, 0.1919862F);
      Leg3 = new ModelRenderer(this, 18, 0);
      Leg3.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg3.setRotationPoint(-2F, 20.5F, -3F);
      Leg3.setTextureSize(64, 128);
      Leg3.mirror = true;
      setRotation(Leg3, 0F, -1.22173F, -0.3839724F);
      Leg1 = new ModelRenderer(this, 18, 0);
      Leg1.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg1.setRotationPoint(-2F, 17.5F, -3F);
      Leg1.setTextureSize(64, 128);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, -1.22173F, 0F);
      Leg2 = new ModelRenderer(this, 18, 0);
      Leg2.addBox(-1F, -1F, -1F, 16, 2, 2);
      Leg2.setRotationPoint(2F, 20.5F, -3F);
      Leg2.setTextureSize(64, 128);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, 1.22173F, 0.3839724F);
      Shape1 = new ModelRenderer(this, 0, 23);
      Shape1.addBox(0F, 0F, -14F, 3, 2, 15);
      Shape1.setRotationPoint(-1.533333F, 15F, -3F);
      Shape1.setTextureSize(64, 128);
      Shape1.mirror = true;
      setRotation(Shape1, -0.3141593F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Shape2.render(f5);
    BigShell.render(f5);
    Head.render(f5);
    LittleShell.render(f5);
    Leg8.render(f5);
    Leg6.render(f5);
    Leg4.render(f5);
    Leg7.render(f5);
    Leg5.render(f5);
    Leg3.render(f5);
    Leg1.render(f5);
    Leg2.render(f5);
    Shape1.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }

  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    Leg6.rotateAngleY = MathHelper.cos(f * 0.3332F) * 0.7F * f1 +70;
    Leg8.rotateAngleY = MathHelper.cos(f * 0.3332F) * 0.7F * f1 +70;
    Leg4.rotateAngleY = MathHelper.cos(f * 0.3332F) * 0.7F * f1 +70;
    Leg2.rotateAngleY = MathHelper.cos(f * 0.3332F) * 0.7F * f1 +70;
    
    Leg3.rotateAngleY = MathHelper.cos(f * 0.3332F + (float)Math.PI) * 0.7F * f1 -70;
    Leg5.rotateAngleY = MathHelper.cos(f * 0.3332F + (float)Math.PI) * 0.7F * f1 -70;
    Leg7.rotateAngleY = MathHelper.cos(f * 0.3332F + (float)Math.PI) * 0.7F * f1 -70;
    Leg1.rotateAngleY = MathHelper.cos(f * 0.3332F + (float)Math.PI) * 0.7F * f1 -70;
    
    Shape2.rotateAngleX = MathHelper.cos(f * 0.3332F + (float)Math.PI) * 0.7F * f1 -25;
    Shape1.rotateAngleX = MathHelper.cos(f * 0.3332F + (float)Math.PI + (float)Math.PI) * 0.7F * f1 +25;
  }

}
